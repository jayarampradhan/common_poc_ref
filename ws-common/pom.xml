<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.uimirror</groupId>
	<artifactId>ws-common</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>ws-common</name>
	<url>http://maven.apache.org</url>

	<organization>
		<name>The UI Mirror team</name>
		<url>http://www.uimirror.com</url>
	</organization>

	<developers>
		<developer>
			<id>jpradha</id>
			<name>Jayaram Pradhan</name>
			<email>jayaramimca AT gmail DOT com</email>
			<roles>
				<role>Project admin</role>
			</roles>
		</developer>
	</developers>

	<!-- Standardize properties for version control -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.10</junit.version>
		<uimirror.common.version>0.0.1</uimirror.common.version>
		<spring.version>4.0.2.RELEASE</spring.version>
		<slf4j.log4j.version>1.6.4</slf4j.log4j.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<mysql.database.java.driver.version>5.1.18</mysql.database.java.driver.version>
		<dom4j.version>1.6.1</dom4j.version>
		<jboss.logging.version>3.1.1.GA</jboss.logging.version>
		<jboss.transaction.version>1.0.1.Final</jboss.transaction.version>
		<ehcache.spring.version>1.2.0</ehcache.spring.version>
		<jsr250-api.version>1.0</jsr250-api.version>
		<mockito.all.version>1.9.5</mockito.all.version>
	</properties>

	<dependencies>
		<!-- Testing library starts -->
		<!-- Junit library -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.all.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Common database pool -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>${dom4j.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>${jboss.logging.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<version>${jboss.transaction.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- MySQL database driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.database.java.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Testing library ends -->


		<!-- UIMirror Common -->
		<dependency>
			<groupId>com.uimirror</groupId>
			<artifactId>common</artifactId>
			<version>${uimirror.common.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring EHCAHE -->
		<dependency>
			<groupId>com.googlecode.ehcache-spring-annotations</groupId>
			<artifactId>ehcache-spring-annotations</artifactId>
			<version>${ehcache.spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-expression</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring EHCAHE END -->

		<!-- Spring 4 dependencies -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> 
			<version>${spring.version}</version> </dependency> <dependency> <groupId>org.springframework</groupId> 
			<artifactId>spring-web</artifactId> <version>${spring.version}</version> 
			</dependency> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-jdbc</artifactId> 
			<version>${spring.version}</version> </dependency> <dependency> <groupId>org.springframework</groupId> 
			<artifactId>spring-expression</artifactId> <version>${spring.version}</version> 
			</dependency> -->


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>common-ws</finalName>
		<resources>
			<resource>
				<directory>src/test/resource</directory>
				<excludes>
					<exclude>**/log4j.xml</exclude>
					<exclude>**/log4j.dtd</exclude>
					<!-- <exclude>**/*test*</exclude> -->
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<linkXRef>false</linkXRef>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<targetJdk>1.7</targetJdk>
					<failOnViolation>true</failOnViolation>
					<failurePriority>5</failurePriority>
					<minimumTokens>150</minimumTokens>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>pmd</goal>
							<goal>check</goal>
							<goal>cpd</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
				</configuration>
				<executions>
					<execution>
						<id>cobertura-exec</id>
						<phase>package</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
				<version>2.8</version> <configuration> <skip>false</skip> </configuration> 
				<executions> <execution> <goals> <goal>jar</goal> </goals> </execution> </executions> 
				</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<!-- Plugin that gives ability to generate your projects site -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-2</version>
				<configuration>
					<!-- Reports that will be displayed on a generated site -->
					<reportPlugins>
						<!-- Produces a cross-reference of the project's sources. This is useful 
							for other reports like PMD or Checkstyle. When this plugin is used with checkstyle 
							you can see code that produces style warning/error in the report. -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.1</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<!-- Checks projects code conventions -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.6</version>
							<configuration>
								<configLocation>check_style.xml</configLocation>
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Repo Location -->
	<repositories>

	</repositories>
</project>
